using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;
using System.Text;
using System.Threading.Tasks;
using MPE.SS.Interfaces;
using MPE.SS.Logic.Tests.Base;
using MPE.SS.Models;

namespace MPE.SS.Logic.Tests.PowerShell
{
    internal class PortOpenTest : PowerShellTestAbstract<PortOpenTest, Connection>
    {
        public PortOpenTest(ITestCure<PortOpenTest, Connection> cure)
            : base(cure)
        {
        }

        protected override string ScriptTempate
        {
            get { return "OpenPortTest -host {0} -port {1}"; }
        }

        protected override List<string> ScriptFiles
        {
            get
            {
                return new List<string>
                {
                    "OpenPortTest.ps1"
                };
            }
        }

        protected override Func<PSObject, string> Converter
        {
            get { return x => x.ToString(); }
        }

        protected override List<Connection> GetTestInput(Server server)
        {
            return  server.RequiredConnections == null ? null : server.RequiredConnections.ToList(); ;
        }

        protected override Func<Connection, string> ConvertToExecutableScript
        {
            get { return x => string.Format(ScriptTempate, x.Host, x.Port); }
        }
        
        public override string Name
        {
            get { return "Connections"; }
        }

        protected override bool EvaluateResult(string result)
        {
            return result == "True";
        }
    }
}
